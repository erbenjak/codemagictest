workflows:
  android-workflow:
    name: Tagging Test Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      flutter: stable
      groups:
        - release_parameters
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "*"
          include: true
      cancel_previous_builds: false

    scripts:
      - name: Set up local.properties
        script: echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"

      - name: Get Flutter packages
        script: flutter pub get

      - name: Tag Formatting and Verification
        script: |
          echo "The tag which triggered the build is $CM_TAG"  
          if [[ $tag_prefix != "" ]]; then
            CM_TAG=$(awk -F $tag_prefix '{print $2}' <<< $CM_TAG)
          fi
          echo "The cleaned tag is $CM_TAG"
          major=$(cut -d '.' -f1 <<< $CM_TAG)
          minor=$(cut -d '.' -f2 <<< $CM_TAG)
          patch=$(cut -d '.' -f3 <<< $CM_TAG)
          if [[ ! $major =~ $version_number_regex ]] || [[ ! $minor =~ $version_number_regex ]] || [[ ! $patch =~ $version_number_regex ]]; then
            echo "$major.$minor.$patch is not a valid version. Each part must match the regex set in the codemagic variables! (currently: \"$version_number_regex\")"
            exit 1
          fi
          echo $CM_TAG > tag_cleaned.txt
      #Insert some form of tag verification
      - name: Build Android-Application-Bundle  with Flutter
        script: |
          cleaned_tag=$(cat tag_cleaned.txt)
          echo "Building with the following tag: $cleaned_tag"
          BUILD_NUMBER=1
          flutter build appbundle --release \
            --build-name=$cleaned_tag \
            --build-number=$BUILD_NUMBER \

    artifacts:
      - build/**/outputs/**/*.aab
      - flutter_drive.log # this does not have to be present when the command fails...

    publishing:
      scripts:
        - name: Display the file listings for all needed things
          script: echo "Listing all files in the build directory" && ls -la build
